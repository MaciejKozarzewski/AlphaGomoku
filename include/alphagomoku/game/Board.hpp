/*
 * Board.hpp
 *
 *  Created on: Jul 30, 2021
 *      Author: Maciej Kozarzewski
 */

#ifndef ALPHAGOMOKU_GAME_BOARD_HPP_
#define ALPHAGOMOKU_GAME_BOARD_HPP_

#include <alphagomoku/utils/matrix.hpp>
#include <alphagomoku/mcts/Value.hpp>
#include <alphagomoku/game/Move.hpp>
#include <alphagomoku/game/rules.hpp>

namespace ag
{
	struct Value;
	struct GameConfig;
}

namespace ag
{

	class Board
	{
		private:
			matrix<Sign> board_data;
			GameRules game_rules;
			Sign sign_to_move;
		public:
			/**
			 * @brief Creates board with given rules and size.
			 */
			Board(GameConfig cfg);
			/**
			 * @brief Loads a board state from string, as generated by the method.
			 * @see toString()
			 */
			Board(const std::string &str, Sign signToMove, GameRules rules);

			GameRules rules() const noexcept
			{
				return game_rules;
			}
			int rows() const noexcept
			{
				return board_data.rows();
			}
			int cols() const noexcept
			{
				return board_data.cols();
			}
			Sign signToMove() const noexcept
			{
				return sign_to_move;
			}
			Sign& at(int row, int column) noexcept
			{
				return board_data.at(row, column);
			}
			Sign at(int row, int column) const noexcept
			{
				return board_data.at(row, column);
			}
			Sign* data() noexcept
			{
				return board_data.data();
			}
			const Sign* data() const noexcept
			{
				return board_data.data();
			}
			int size() const noexcept
			{
				return rows() * cols();
			}

			Sign& at(const std::string &text) noexcept;
			Sign at(const std::string &text) const noexcept;

			void putMove(Move move) noexcept;
			void undoMove(Move move) noexcept;

			bool isValid() const noexcept;
			bool isSquare() const noexcept;
			bool isEmpty() const noexcept;
			bool isFull() const noexcept;
			bool isForbidden(Move m) const noexcept;
			GameOutcome getOutcome() const noexcept;
			GameOutcome getOutcome(Move lastMove) const noexcept;

			std::string toString() const;
			std::string toString(const matrix<ProvenValue> &pv) const;
			std::string toString(const matrix<float> &policy) const;
			std::string toString(const matrix<Value> &actionValues) const;
	};

} /* namespace ag */

#endif /* ALPHAGOMOKU_GAME_BOARD_HPP_ */
