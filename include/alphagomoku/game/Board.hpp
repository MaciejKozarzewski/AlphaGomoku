/*
 * Board.hpp
 *
 *  Created on: Jul 30, 2021
 *      Author: Maciej Kozarzewski
 */

#ifndef ALPHAGOMOKU_GAME_BOARD_HPP_
#define ALPHAGOMOKU_GAME_BOARD_HPP_

#include <alphagomoku/utils/matrix.hpp>
#include <alphagomoku/game/Move.hpp>

namespace ag
{
	enum class GameRules;
	class Value;
	class Score;
}

namespace ag
{
	/**
	 * @brief Utilities for board.
	 */
	class Board
	{
		public:
			/**
			 * @brief Creates board state from string, as generated by toString() method.
			 */
			static matrix<Sign> fromString(const std::string &str);
			static matrix<Sign> fromListOfMoves(int rows, int cols, const std::vector<Move> &moves);
			static std::vector<Move> extractMoves(const std::string &str);
			static bool isValid(const matrix<Sign> &board, Sign signToMove) noexcept;
			static bool isEmpty(const matrix<Sign> &board) noexcept;
			static bool isFull(const matrix<Sign> &board) noexcept;
			static bool isTransitionPossible(const matrix<Sign> &from, const matrix<Sign> &to) noexcept;

			static int numberOfMoves(const matrix<Sign> &board) noexcept;

			static void putMove(matrix<Sign> &board, Move move) noexcept;
			static void undoMove(matrix<Sign> &board, Move move) noexcept;

			static Sign getSignAt(const matrix<Sign> &board, Move m) noexcept;
			static bool isMoveLegal(const matrix<Sign> &board, Move m, GameRules rules) noexcept;

			/**
			 * @brief Generates string representation of board state that can be loaded by fromString() method.
			 */
			static std::string toString(const matrix<Sign> &board, bool prettyPrint = false);
			/**
			 * @brief Generates string representation of board state together with information about proven values.
			 */
			static std::string toString(const matrix<Sign> &board, const matrix<Score> &actionScores);
			/**
			 * @brief Generates string representation of board state together with information about policy priors.
			 */
			static std::string toString(const matrix<Sign> &board, const matrix<float> &policy);
			/**
			 * @brief Generates string representation of board state together with information about action values.
			 */
			static std::string toString(const matrix<Sign> &board, const matrix<Value> &actionValues);
	};
} /* namespace ag */

#endif /* ALPHAGOMOKU_GAME_BOARD_HPP_ */
